{"version":3,"sources":["components/Add.js","helpers/getGifs.js","components/GifItem.js","components/Gif.js","hooks/useFetchGifs.js","components/gif/GifScreen.js","components/history/HistoryScreen.js","components/ui/Navbar.js","router/DashboardRoutes.js","router/AppRouter.js","GifApp.js","index.js"],"names":["Add","setcategories","useState","state","setstate","onSubmit","e","preventDefault","trim","length","categ","type","placeholder","className","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","src","alt","Gif","loading","stateobj","setstateobj","useEffect","then","imgs","useFetchGifs","GifScreen","categories","HistoryScreen","href","Navbar","to","activeClassName","exact","DashboardRoutes","path","component","AppRouter","GifApp","ReactDOM","render","document","getElementById"],"mappings":"iNAKaA,EAAM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OACI,uBAAMC,SAXK,SAACC,GACZA,EAAEC,iBAEGJ,EAAMK,OAAOC,OAAS,IACvBR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAeO,OAClCN,EAAS,MAMb,UACI,uBACIO,KAAK,OACLC,YAAY,SACZC,UAAU,eACVC,MAAOX,EACPY,SArBQ,SAACT,GACjBF,EAASE,EAAEU,OAAOF,UAsBd,wBACIH,KAAK,SACLE,UAAU,wCAFd,wB,iCC9BCI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKEA,EAASC,OALX,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAU,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG5B,OACI,qBAAKP,UAAU,OAAf,SACI,qBAAKqB,IAAKd,EAAKe,IAAKL,OCFnBM,EAAM,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAEjB,ECHwB,SAACA,GACzB,MAAgChB,mBAAS,CACrCuB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAZAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GAEFH,EAAY,CACRd,KAAMiB,EACLL,SAAS,SAIvB,CAACnB,IAEGoB,EDfsBK,CAAazB,GAA9BQ,EAAZ,EAAOD,KAAWY,EAAlB,EAAkBA,QAElB,OACI,qCACI,6BAAKnB,IACJmB,GAAW,wCACZ,qBAAKxB,UAAU,YAAf,SAEQa,EAAKC,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbpBe,EAAY,WAErB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,gCACI,yCACA,cAAC,EAAD,CAAKA,cAAeA,IACpB,uBAEA,6BAEQ4C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YChBhB4B,EAAgB,WACzB,OACI,gCACI,yCACA,uBACA,00CAMA,mBAAGC,KAAK,yHAAyHlC,UAAU,mBAA3I,8BCVCmC,EAAS,WAClB,OACI,sBAAKnC,UAAU,8CAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACVoC,GAAG,IAFP,2BAOA,qBAAKpC,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACIqC,gBAAgB,SAChBrC,UAAU,oBACVsC,OAAK,EACLF,GAAG,OAJP,kBASA,cAAC,IAAD,CACIC,gBAAgB,SAChBrC,UAAU,oBACVsC,OAAK,EACLF,GAAG,WAJP,8BCnBPG,EAAkB,WAC3B,OACI,qCACG,cAAC,EAAD,IAEA,8BACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,OAAOC,UAAYV,IACrC,cAAC,IAAD,CAAOO,OAAK,EAACE,KAAK,WAAWC,UAAYR,IAEzC,cAAC,IAAD,CAAUG,GAAG,kBCRnBM,EAAY,WACrB,OACI,cAAC,IAAD,UACA,8BACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAOF,KAAK,IAAIC,UAAaF,WCX9BI,EAAS,WAElB,OACI,qBAAK3C,UAAU,kBAAf,SACI,cAAC,EAAD,O,YCAZ4C,IAASC,OACP,cAAE,EAAF,IACAC,SAASC,eAAe,W","file":"static/js/main.f13d9b16.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Add = ({setcategories}) => {\r\n\r\n    const [state, setstate] = useState(\"\");\r\n\r\n    // e es un evento\r\n    const inputChange = (e) => {\r\n        setstate(e.target.value); // el state se actualiza\r\n    } \r\n\r\n    const submit = (e) => {\r\n        e.preventDefault(); //evitar que la pag se recargue al dar enter\r\n\r\n        if ( state.trim().length > 2 ){\r\n            setcategories(categ => [state, ...categ]);\r\n            setstate('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"form-control\"\r\n                value={state}\r\n                onChange={inputChange}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn m-1 btn-block btn-outline-primary\"\r\n            >\r\n               Search \r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAdd.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","//En la carpeta helpers creo funciones que hacen cierto trabajo en especifico\r\n//pueden recibir argumentos en especifico se procesan y hacen un return en este caso del gif\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=11&api_key=dOUBuHHMSCmdWodT3GpYmZ91c5pqVtGq`;\r\n    //ir a buscar\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifItem = ({title, url}) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const Gif = ({category}) => {\r\n\r\n    const {data:gifs, loading} = useFetchGifs(category)\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3> \r\n            {loading && <p>loading</p>}\r\n            <div className=\"card-grid\">    \r\n                {\r\n                    gifs.map( img => (        \r\n                        <GifItem\r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))       \r\n                }           \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [stateobj, setstateobj] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    //se hace el efecto para que se dispare cuando cambia la categoria\r\n    useEffect(() => {\r\n        getGifs(category)//promesa\r\n            .then(imgs => {\r\n\r\n                setstateobj({\r\n                    data: imgs,\r\n                     loading: false  \r\n                 });    \r\n                \r\n            });\r\n    }, [category])\r\n\r\n    return stateobj; // {data: [], loading: true} retorna un objeto\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Add } from '../Add';\r\nimport { Gif } from '../Gif';\r\n\r\nexport const GifScreen = () => {\r\n\r\n    const [categories, setcategories] = useState(['Top Gifs']);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Gif App</h1>\r\n            <Add setcategories={setcategories}/>\r\n            <hr/>        \r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <Gif \r\n                        key={category}\r\n                        category={category} />\r\n                    ))\r\n                }\r\n            </ol> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const HistoryScreen = () => {\r\n    return (\r\n        <div>\r\n            <h2>History</h2>\r\n            <hr/>    \r\n            <p>The Graphics Interchange Format (GIF; /ɡɪf/ GHIF or /dʒɪf/ JIF) is a bitmap image format that was developed by a team at the online services provider CompuServe led by American computer scientist Steve Wilhite on 15 June 1987. \r\n            It has since come into widespread usage on the World Wide Web due to its wide support and portability between applications and operating systems.\r\n            The format supports up to 8 bits per pixel for each image, allowing a single image to reference its own palette of up to 256 different colors chosen from the 24-bit RGB color space. \r\n            It also supports animations and allows a separate palette of up to 256 colors for each frame. These palette limitations make GIF less suitable for reproducing color photographs and other images with color gradients, but well-suited for simpler images such as graphics or logos with solid areas of color.\r\n            GIF images are compressed using the Lempel–Ziv–Welch (LZW) lossless data compression technique to reduce the file size without degrading the visual quality. This compression technique was patented in 1985. Controversy over the licensing agreement between the software patent holder, Unisys, and CompuServe in 1994 spurred the development of the Portable Network Graphics (PNG) standard. \r\n            By 2004 all the relevant patents had expired.</p>\r\n            <a href=\"https://en.wikipedia.org/wiki/GIF#:~:text=CompuServe%20introduced%20GIF%20on%2015,it%20used%20LZW%20data%20compression\" className=\"btn btn-primary \">Bibliography</a>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                App para Heru\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/gif\"\r\n                    >\r\n                        Gifs\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/history\"\r\n                    >\r\n                        History\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { GifScreen } from '../components/gif/GifScreen';\r\nimport { HistoryScreen } from '../components/history/HistoryScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n           <Navbar/> \r\n\r\n           <div>\r\n               <Switch>\r\n                   \r\n                   <Route exact path=\"/gif\" component={ GifScreen } />\r\n                   <Route exact path=\"/history\" component={ HistoryScreen } />\r\n\r\n                   <Redirect to=\"/gif\"/>\r\n               </Switch>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n        <div>\r\n          <Switch>\r\n              <Route path=\"/\" component= { DashboardRoutes } />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const GifApp = () => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <AppRouter/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifApp } from './GifApp';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  < GifApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}